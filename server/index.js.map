{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/sessions.tsx", "../app/components/Header/index.js", "../app/components/Header/Header.tsx", "../app/utils.ts", "../app/routes/sessions/index.tsx", "../app/routes/sessions/new.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/sessions.tsx\";\nimport * as route2 from \"./routes/sessions/index.tsx\";\nimport * as route3 from \"./routes/sessions/new.tsx\";\nimport * as route4 from \"./routes/logout.tsx\";\nimport * as route5 from \"./routes/index.tsx\";\nimport * as route6 from \"./routes/login.tsx\";\nimport * as route7 from \"./routes/notes.tsx\";\nimport * as route8 from \"./routes/notes/$noteId.tsx\";\nimport * as route9 from \"./routes/notes/index.tsx\";\nimport * as route10 from \"./routes/notes/new.tsx\";\nimport * as route11 from \"./routes/join.tsx\";\nimport * as route12 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/sessions\": {\n      id: \"routes/sessions\",\n      parentId: \"root\",\n      path: \"sessions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/sessions/index\": {\n      id: \"routes/sessions/index\",\n      parentId: \"routes/sessions\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sessions/new\": {\n      id: \"routes/sessions/new\",\n      parentId: \"routes/sessions\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import { Link, Outlet } from \"@remix-run/react\";\nimport Header from \"../components/Header\";\n\nexport default function SessionIndex() {\n  return (\n    <div>\n      <Header />\n      <div>\n        <ul>\n          <li>\n            <div>\n              <Link className=\"block p-4 text-xl text-blue-500\" to=\"new\">\n                New Session\n              </Link>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n", "import Header from \"./Header\";\nexport default Header;\n", "import { Form, Link } from \"@remix-run/react\";\nimport { useUser } from \"../../utils\";\n\nexport default function Header() {\n  const user = useUser();\n  return (\n    <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n      <h1 className=\"text-3xl font-bold\">\n        <Link to=\"/\">Summit</Link>\n      </h1>\n      <p>{user.email}</p>\n      <Form action=\"/logout\" method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n        >\n          Logout\n        </button>\n      </Form>\n    </header>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Session() {\n  return (\n    <p>\n      <Link to=\"new\">New Session</Link>\n    </p>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nexport default function NewSessionPage() {\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  return (\n    <Form>\n      <div>\n        <label>\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n          />\n        </label>\n      </div>\n    </Form>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n              <img\n                className=\"h-full w-full object-cover\"\n                src=\"https://user-images.githubusercontent.com/1500684/158276318-61064670-06c3-43f3-86e3-d624785b8ff7.jpg\"\n                alt=\"Nirvana playing on stage with Kurt's jagstang guitar\"\n              />\n              <div className=\"absolute inset-0 bg-[color:rgba(255,56,56,0.5)] mix-blend-multiply\" />\n            </div>\n            <div className=\"relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pb-20 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"block uppercase text-red-500 drop-shadow-md\">\n                  Grunge Stack\n                </span>\n              </h1>\n              <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                Check the README.md file for instructions on how to get this\n                project deployed.\n              </p>\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/notes\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                  >\n                    View Notes for {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-red-700 shadow-sm hover:bg-red-50 sm:px-8\"\n                    >\n                      Sign up\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600  \"\n                    >\n                      Log In\n                    </Link>\n                  </div>\n                )}\n              </div>\n              <a href=\"https://remix.run\">\n                <img\n                  src=\"https://user-images.githubusercontent.com/1500684/158298926-e45dafff-3544-4b69-96d6-d3bcc33fc76a.svg\"\n                  alt=\"Remix\"\n                  className=\"mx-auto mt-16 w-full max-w-[12rem] md:max-w-[16rem]\"\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991167-651c8fc5-2f72-4afa-94d8-2520ecbc5ebc.svg\",\n                alt: \"AWS\",\n                href: \"https://aws.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157991935-26c0d587-b866-49f5-af34-8f04be1c9df2.svg\",\n                alt: \"DynamoDB\",\n                href: \"https://aws.amazon.com/dynamodb/\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157990874-31f015c3-2af7-4669-9d61-519e5ecfdea6.svg\",\n                alt: \"Architect\",\n                href: \"https://arc.codes\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n          <Link to=\"/sessions\" className=\"block p-4 text-xl text-blue-500\">\n            \uD83D\uDC40 Sessions\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: NonNullable<Awaited<ReturnType<typeof getNote>>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'ac226b49','entry':{'module':'/_static/build/entry.client-NRRM3CGO.js','imports':['/_static/build/_shared/chunk-ZM2FPG5L.js','/_static/build/_shared/chunk-NTN7YPXJ.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-PKFUPL36.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-IYSKSW67.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-46EXR2XD.js','imports':['/_static/build/_shared/chunk-TUVJFUP2.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-XGLQJKE4.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-TUVJFUP2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-ONIKIMH3.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-TUVJFUP2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-BLEMLIX5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-SFK3IG2V.js','imports':['/_static/build/_shared/chunk-ATZBVMZP.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-TUVJFUP2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-GA3Y5O5H.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-XLNGVAS7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-UGI44LNL.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sessions':{'id':'routes/sessions','parentId':'root','path':'sessions','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/sessions-76QOXWIA.js','imports':['/_static/build/_shared/chunk-TUVJFUP2.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sessions/index':{'id':'routes/sessions/index','parentId':'routes/sessions','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/sessions/index-RXNWJ33J.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sessions/new':{'id':'routes/sessions/new','parentId':'routes/sessions','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/sessions/new-BZP6KRLD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-AC226B49.js'};"],
  "mappings": "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",
  "names": []
}
